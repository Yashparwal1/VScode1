
from main.tools import banner,colors,template
import os
import requests
from bs4 import BeautifulSoup

#main function
def main():
    while True:
        os.system("clear")
        banner.main()
        banner.attack("Pentesting and Bug Bounty")
        list_attacks=["Katana","Gau","Gobuster","Waybackurls","Httpx","Httprobe","Eyewitness","gowitness","go back"]
        for i in range(len(list_attacks)):
                print(colors.options,f"{i}) {list_attacks[i]}".title(),colors.reset)
        option = input(f"\n {colors.select}Select An Option ->{colors.reset}  ")
        if option=="0":
            print("\n[+] Katana")
            os.system("clear")
            # name,command,discription,writeup,link=True,method="kali",github_install="",github_check=True
            github=github_getting_text("https://github.com/projectdiscovery/katana",'p[class="f4 my-3"]',0)
            template.template("Katana","katana -h",github.strip(),{'Katana – Crawling and Spidering Framework':'https://www.geeksforgeeks.org/katana-crawling-and-spidering-framework/','Katana a next-generation crawling and spidering framework':'https://github.com/projectdiscovery/katana/blob/main/README.md','Katana- A Python Tool For Google Hacking':'https://hakin9.org/katana-a-python-tool-for-google-hacking/'},link="github.com/projectdiscovery/katana/cmd/katana@latest",method="go")
        
        elif option=="1":
            print("\n[+] Gau")
            os.system("clear")
            github=github_getting_text("https://github.com/lc/gau",'p[class="f4 my-3"]',0)
            template.template("gau","gau -h",github.strip(),{'gau (GetAllUrls) Review – Tool For Discovering URL in Kali Linux':'https://www.geeksforgeeks.org/gau-getallurls-review-tool-for-discovering-url-in-kali-linux/','Quick Tutorial: gau (GetAllURLs)':'https://allabouttesting.org/quick-tutorial-gau-getallurls/','Fetch URLs with GetAllUrls (GAU)':'https://bughacking.com/fetch-urls-with-getallurls-gau/'},link="github.com/lc/gau/v2/cmd/gau@latest",method="go")
        elif option=="2":
            print("\n[+] Gobuster")
            os.system("clear")
            github=github_getting_text("https://github.com/OJ/gobuster",'ul[dir="auto"]',0)
            template.template("gobuster","gobuster -h",github.strip()+'\r\n - '.join(github.strip().split('\n')),{'How to use Gobuster for Scanning Website’s Subdomains & Directories?':'https://spinningsecurity.com/how-to-use-gobuster-for-scanning-websites/','https://blog.intigriti.com/2021/07/05/hacker-tools-gobuster/':'https://blog.intigriti.com/2021/07/05/hacker-tools-gobuster/','Gobuster – Penetration Testing Tools in Kali Tools':'https://www.geeksforgeeks.org/gobuster-penetration-testing-tools-in-kali-tools/','Perform Pentest Recon Using GoBuster':'https://vickieli.dev/hacking/gobuster/','Gobuster for directory, DNS and virtual hosts bruteforcing':'https://erev0s.com/blog/gobuster-directory-dns-and-virtual-hosts-bruteforcing/','Gobuster Tutorial – How to Find Hidden Directories, Sub-Domains, and S3 Buckets':'https://www.freecodecamp.org/news/gobuster-tutorial-find-hidden-directories-sub-domains-and-s3-buckets/'})
        elif option=="3":
            print("\n[+] Waybackurls")
            os.system("clear")
            github=github_getting_text("https://github.com/tomnomnom/waybackurls",'p[class="f4 my-3"]',0)
            template.template("waybackurls","waybackurls -h",github.strip(),{'https://www.geeksforgeeks.org/waybackurls-fetch-all-the-urls-that-the-wayback-machine-knows-about-for-a-domain/':'https://www.geeksforgeeks.org/waybackurls-fetch-all-the-urls-that-the-wayback-machine-knows-about-for-a-domain/','Waybackurls: A CLI Wayback Machine Solution for Fetching Webpages':'https://bughacking.com/waybackurls-cli-wayback-machine-solution-fetching-webpages/','Waybackurls – Best Wey to Fetch all the URLs with Tutorial':'https://unethicalhacker.in/waybackurls/'},link="github.com/tomnomnom/waybackurls@latest",method="go")
        elif option=="4":
            print("\n[+] Httpx")
            os.system("clear")
            github=github_getting_text("https://github.com/projectdiscovery/httpx",'p[class="f4 my-3"]',0)
            template.template("httpx-toolkit","httpx-toolkit -h",github.strip(),{'Httpx Advanced tool for Penetration Tester':'https://securiumsolutions.com/blog/httpx-advanced-tool-for-penetration-tester/','A Detailed Guide on httpx':'https://www.hackingarticles.in/a-detailed-guide-on-httpx/','Running httpX':'https://github.com/projectdiscovery/httpx/blob/main/README.md'})
        elif option=="5":
            print("\n[+] Httprobe")
            os.system("clear")
            github=github_getting_text("https://github.com/tomnomnom/httprobe",'p[class="f4 my-3"]',0)
            template.template("httpropbe","httptobe -h",github.strip(),{'HTTPROBE':'https://tzusec.com/httprobe/','TOMNOMNOM HTTPROBE USE':'https://oscp.medium.com/tomnomnom-httprobe-use-23465958fbd8'})
        elif option=="6":
            print("\n[+] Eyewitness")
            os.system("clear")
            github=github_getting_text("https://github.com/FortyNorthSecurity/EyeWitness",'p[class="f4 my-3"]',0)
            template.template("eyewitness","eyewitness -h",github.strip(),{'TOOLS EyeWitness – Hacker Tools: Hacking through screenshots':'https://blog.intigriti.com/2022/01/11/hacker-tools-eyewitness/','Screenshot Tool: EyeWitness':'https://www.whiteoaksecurity.com/blog/screenshot-tool-part-1-eyewitness/','EyeWitness -- Web Footprints and Enumeration':'https://www.kalilinux.in/2021/06/eyewitness-web-footprints-and.html','EyeWitness Official documentation':'https://github.com/FortyNorthSecurity/EyeWitness/blob/master/README.md'})
        elif option=="7":
            print("\n[+] gowitness")
            os.system("clear")
            github=github_getting_text("https://github.com/sensepost/gowitness",'p[dir="auto"]',1)
            template.template("gowitness","gowitness -h",github.strip(),{'Screenshot Tool: Gowitness':'https://www.whiteoaksecurity.com/blog/screenshot-tool-part-4-gowitness/','Gowitness : A Golang Web Screenshot Utility':'https://kalilinuxtutorials.com/gowitness/','Gowitness – A Golang, Web Screenshot Utility Using Chrome Headless':'https://haxf4rall.com/2020/01/17/gowitness-a-golang-web-screenshot-utility-using-chrome-headless/'},link="github.com/sensepost/gowitness@latest",method="go")
        else:
            return
def github_getting_text(link,selector,indexvalue):
    print("Please Wait....\r",end="")
    URL = link
    try:
        r = requests.get(URL)
        soup = BeautifulSoup(r.content, 'html5lib')
        paras = soup.select(selector)
        #check index value from test file
        return paras[indexvalue].text
    except:
        return f"{colors.red}Not Loaded Because No Internet Connection{colors.reset}"

if __name__=='__main__':
    main()
